//gradle wrapper 生成gradle wrapper及脚本
// gradle build   
buildscript {
    repositories {
        mavenLocal()
        maven { url 'https://mirrors.cloud.tencent.com/gradle/'}
		maven { url 'https://mirrors.cloud.tencent.com/nexus/repository/maven-public/' }
		maven { url 'https://maven.aliyun.com/repository/gradle-plugin' }
		maven { url 'https://maven.aliyun.com/nexus/content/groups/public' }
		maven { url 'https://maven.aliyun.com/nexus/content/repositories/jcenter' }
		maven { url 'https://maven.aliyun.com/repository/jcenter' }
		maven { url 'https://maven.aliyun.com/repository/google' }
        mavenCentral()
        maven { url 'https://jitpack.io' }
        maven { url "https://maven.pkg.jetbrains.space/public/p/ktor/eap"}
        //jcenter()
        google()
    }

}

plugins{
	id 'java-library'
	id 'maven-publish'
	alias libs.plugins.kotlin
	alias libs.plugins.kotlin.serialization
	alias libs.plugins.devtools.ksp
}

group 'com.github.rwsbillyang'  //必须放在plugins后面，否则报错
version libs.versions.ktorKitVersion.get() //or asProvider().get()




dependencies {
    implementation libs.kotlin.stdlib.jdk8
    implementation libs.kotlin.serialization.json

    compileOnly libs.logback.classic
	
	testImplementation libs.kotlin.test.junit// 使用kotlin-test将提示找不到，使用kotlin-test-junit则没问题 https://mvnrepository.com/artifact/org.jetbrains.kotlin/kotlin-test-junit

    implementation libs.ktor.serialization
    implementation libs.ktor.serialization.kotlinx.json

    compileOnly libs.ktor.server.netty
    compileOnly libs.ktor.server.cors
    compileOnly libs.ktor.server.data.conversion
    compileOnly libs.ktor.server.forwarded.header
    compileOnly libs.ktor.server.partial.content
    compileOnly libs.ktor.server.auto.head.response
    compileOnly libs.ktor.server.status.pages
    compileOnly libs.ktor.server.call.logging
    compileOnly libs.ktor.server.content.negotiation
    compileOnly libs.ktor.server.call.id
    compileOnly libs.ktor.server.resources
    testImplementation libs.ktor.server.tests
    testImplementation libs.ktor.server.test.host
    testImplementation libs.kotlin.test.junit


    compileOnly libs.ktor.server.auth
    compileOnly libs.ktor.server.auth.jwt
    compileOnly libs.ktor.server.websockets
    
    compileOnly libs.ktor.client.core.jvm
    compileOnly libs.ktor.client.cio.jvm
    compileOnly libs.ktor.client.content.negotiation
    compileOnly libs.ktor.client.logging.jvm
    compileOnly libs.ktor.client.encoding

    
    testImplementation libs.ktor.client.content.negotiation
    testImplementation libs.ktor.client.logging.jvm
    
    compileOnly libs.koin.core
    testImplementation libs.koin.test
    compileOnly libs.koin.ktor
    compileOnly libs.koin.logger
    
    compileOnly libs.caffeine
    testImplementation libs.caffeine
    
    //SQL
    compileOnly libs.mysql.connector.java
    compileOnly libs.hikariCP
    implementation platform(libs.komapper.platform)
    //ksp platform(libs.komapper.platform)
    implementation libs.komapper.starter.jdbc
    implementation libs.komapper.dialect.mysql.jdbc
    //ksp "org.komapper:komapper-processor" //ksp libs.komapper.processor
    compileOnly libs.komapper.template

    

    // https://mvnrepository.com/artifact/org.apache.commons/commons-lang3
    compileOnly libs.apache.commons.lang3

    //commons-codec 1.13 会报 base64异常，1.10，1.15没有问题
    // https://mvnrepository.com/artifact/commons-codec/commons-codec
    implementation libs.apache.commons.codec

    // https://mvnrepository.com/artifact/org.jsoup/jsoup
    //compile group: 'org.jsoup', name: 'jsoup', version: '1.11.3'

	//NOSQL
    // https://mvnrepository.com/artifact/org.mongodb/bson
    //compileOnly('org.mongodb:bson:4.7.1')
    //testImplementation('org.mongodb:bson:4.11.0')
    compileOnly("org.litote.kmongo:kmongo-id:4.11.0")
    compileOnly ("com.github.jershell:kbson:0.5.0")
    compileOnly("org.litote.kmongo:kmongo-coroutine-serialization:4.11.0")


    // https://mvnrepository.com/artifact/org.apache.shardingsphere/sharding-jdbc-core
    //compileOnly group: 'org.apache.shardingsphere', name: 'sharding-jdbc-core', version: '5.1.2'

    // https://mvnrepository.com/artifact/com.auth0/java-jwt
    //compileOnly('com.auth0:java-jwt:3.10.3')

    //send pwd to user
    compileOnly ('com.sun.mail:javax.mail:1.6.2')

    //compileOnly ('com.alipay.sofa:sofa-rpc-all:5.8.5')

}

kotlin {
    sourceSets.main {
        kotlin.srcDir("build/generated/ksp/main/kotlin")
    }
    compilerOptions{
      //  jvmTarget = JvmTarget.JVM_11 //error Could not get unknown property 'JvmTarget' for object of type org.jetbrains.kotlin.gradle.dsl.KotlinJvmCompilerOptionsDefault.
    } 
}

java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(17))
    }
    //targetCompatibility = JavaVersion.VERSION_11 //error: Inconsistent JVM-target compatibility detected for tasks 'compileJava' (11) and 'compileKotlin' (17).
}

sourceSets {
    main.kotlin.srcDirs = main.java.srcDirs = ['src']
    test.kotlin.srcDirs = test.java.srcDirs = ['test']
    main.resources.srcDirs = ['resources']
    test.resources.srcDirs = ['testresources']
}

publishing {
    publications {
        maven(MavenPublication) {
            from components.java
        }
    }
}
