buildscript {
    repositories {
        mavenLocal()
        maven{ url 'https://maven.aliyun.com/nexus/content/groups/public/'}
        maven { url 'https://maven.aliyun.com/repository/google/' }
        maven { url 'https://maven.aliyun.com/repository/jcenter/'}
        mavenCentral()
        maven { url 'https://jitpack.io' }
        maven { url "https://maven.pkg.jetbrains.space/public/p/ktor/eap"}
        //jcenter()
        google()
    }

    dependencies {
        classpath "net.sf.proguard:proguard-gradle:$proguardVersion"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-serialization:$kotlin_version"
    }
}


apply plugin: 'kotlin'
apply plugin: 'kotlinx-serialization'
//apply plugin: 'com.google.devtools.ksp'
apply plugin: 'java-library'
apply plugin: 'maven-publish'

group 'com.github.rwsbillyang'
version "$ktorKitVersion"


sourceSets {
    main.kotlin.srcDirs = main.java.srcDirs = ['src']
    test.kotlin.srcDirs = test.java.srcDirs = ['test']
    main.resources.srcDirs = ['resources']
    test.resources.srcDirs = ['testresources']
}
// Use KSP Generated sources
sourceSets.main {
    java.srcDirs("build/generated/ksp/main/kotlin")
}

sourceCompatibility = "$jdkVersion"
targetCompatibility = "$jdkVersion"

compileKotlin {
    kotlinOptions.jvmTarget = "$jdkVersion"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "$jdkVersion"
}


repositories {
    mavenLocal()
    mavenCentral()
    maven { url 'https://jitpack.io' }
    maven { url "https://maven.pkg.jetbrains.space/public/p/ktor/eap"}
    jcenter()
    google()

}

dependencies {
    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version")

    compileOnly("ch.qos.logback:logback-classic:$logback_version")

    implementation("org.jetbrains.kotlinx:kotlinx-serialization-json:$kotlinx_serialization_version") // JVM dependency
    implementation("io.ktor:ktor-serialization:$ktor_version")
    implementation("io.ktor:ktor-serialization-kotlinx-json:$ktor_version")

    compileOnly("io.ktor:ktor-server-netty:$ktor_version")
    compileOnly("io.ktor:ktor-server-auth:$ktor_version")
    compileOnly("io.ktor:ktor-server-auth-jwt:$ktor_version")
    compileOnly("io.ktor:ktor-server-data-conversion:$ktor_version")
    compileOnly("io.ktor:ktor-server-forwarded-header:$ktor_version")
    compileOnly("io.ktor:ktor-server-partial-content:$ktor_version")
    compileOnly("io.ktor:ktor-server-auto-head-response:$ktor_version")
    compileOnly("io.ktor:ktor-server-status-pages:$ktor_version")
    compileOnly("io.ktor:ktor-server-call-logging:$ktor_version")
    compileOnly("io.ktor:ktor-server-websockets:$ktor_version")
    compileOnly("io.ktor:ktor-server-content-negotiation:$ktor_version")
    compileOnly("io.ktor:ktor-server-call-id:$ktor_version")
    compileOnly("io.ktor:ktor-server-resources:$ktor_version")

    compileOnly "io.ktor:ktor-client-core-jvm:$ktor_version"
    compileOnly "io.ktor:ktor-client-cio-jvm:$ktor_version"
    compileOnly "io.ktor:ktor-client-content-negotiation:$ktor_version"
    compileOnly "io.ktor:ktor-serialization-kotlinx-xml:$ktor_version"
    compileOnly("io.ktor:ktor-client-logging-jvm:$ktor_version")
    compileOnly "io.ktor:ktor-client-encoding:$ktor_version"

    testImplementation("io.ktor:ktor-server-tests:$ktor_version")
    testImplementation("io.ktor:ktor-server-test-host:$ktor_version")
    testImplementation "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"// 使用kotlin-test将提示找不到，使用kotlin-test-junit则没问题 https://mvnrepository.com/artifact/org.jetbrains.kotlin/kotlin-test-junit
    testImplementation "io.ktor:ktor-client-content-negotiation:$ktor_version"
    testImplementation("io.ktor:ktor-client-logging-jvm:$ktor_version")



    compileOnly "io.insert-koin:koin-core:$koin_version"
    //testImplementation "io.insert-koin:koin-test:$koin_version"
    compileOnly "io.insert-koin:koin-ktor:$koin_version"
    compileOnly "io.insert-koin:koin-logger-slf4j:$koin_version"
    //compileOnly "io.insert-koin:koin-annotations:$koin_ksp_version"
    //ksp "io.insert-koin:koin-ksp-compiler:$koin_ksp_version"


    // https://mvnrepository.com/artifact/org.apache.commons/commons-lang3
    compileOnly("org.apache.commons:commons-lang3:$commonsLang3Version")

    //commons-codec 1.13 会报 base64异常，1.10，1.15没有问题
    // https://mvnrepository.com/artifact/commons-codec/commons-codec
    implementation("commons-codec:commons-codec:1.15")

    // https://mvnrepository.com/artifact/org.jsoup/jsoup
    //compile group: 'org.jsoup', name: 'jsoup', version: '1.11.3'


    // https://mvnrepository.com/artifact/org.mongodb/bson
    compileOnly('org.mongodb:bson:4.7.1')
    //testImplementation('org.mongodb:bson:4.7.1')

    compileOnly("org.litote.kmongo:kmongo-id:$kmongo_version")
    compileOnly ("com.github.jershell:kbson:$kbson_version")
    compileOnly("org.litote.kmongo:kmongo-coroutine-serialization:$kmongo_version")

    //SQL
    compileOnly "mysql:mysql-connector-java:$mysqlConnectorVersion"
    compileOnly "com.zaxxer:HikariCP:$HikariCPVersion"
    compileOnly("org.komapper:komapper-starter-jdbc:$komapperVersion")
    compileOnly("org.komapper:komapper-dialect-mysql-jdbc:$komapperVersion")

    // https://mvnrepository.com/artifact/org.apache.shardingsphere/sharding-jdbc-core
    //compileOnly group: 'org.apache.shardingsphere', name: 'sharding-jdbc-core', version: '5.1.2'
    //compileOnly "org.ktorm:ktorm-core:3.5.0"



    compileOnly("com.github.ben-manes.caffeine:caffeine:$caffeineVersion")

    // https://mvnrepository.com/artifact/com.auth0/java-jwt
    //compileOnly('com.auth0:java-jwt:3.10.3')

    //send pwd to user
    compileOnly ('com.sun.mail:javax.mail:1.6.2')

    //compileOnly ('com.alipay.sofa:sofa-rpc-all:5.8.5')

}
publishing {
    publications {
        maven(MavenPublication) {
            from components.java
        }
    }
}
